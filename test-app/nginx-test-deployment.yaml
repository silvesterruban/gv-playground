apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-test
  namespace: default
  labels:
    app: nginx-test
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-test
  template:
    metadata:
      labels:
        app: nginx-test
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: html-content
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html-content
        configMap:
          name: nginx-html-content
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-html-content
  namespace: default
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>GV Playground - Test App</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                min-height: 100vh;
            }
            .container {
                background: rgba(255, 255, 255, 0.1);
                padding: 30px;
                border-radius: 15px;
                backdrop-filter: blur(10px);
                box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
            }
            h1 {
                text-align: center;
                margin-bottom: 30px;
                font-size: 2.5em;
            }
            .status {
                background: rgba(0, 255, 0, 0.2);
                padding: 15px;
                border-radius: 10px;
                margin: 20px 0;
                border-left: 5px solid #00ff00;
            }
            .info {
                background: rgba(255, 255, 255, 0.1);
                padding: 15px;
                border-radius: 10px;
                margin: 10px 0;
            }
            .timestamp {
                text-align: center;
                margin-top: 30px;
                opacity: 0.8;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üéâ GV Playground Test App</h1>
            
            <div class="status">
                <h2>‚úÖ ALB 503 Error Fixed!</h2>
                <p>Your Application Load Balancer is now working correctly!</p>
            </div>

            <div class="info">
                <h3>üèóÔ∏è Infrastructure Status</h3>
                <ul>
                    <li><strong>EKS Cluster:</strong> playground-eks-cluster (ACTIVE)</li>
                    <li><strong>Load Balancer:</strong> playground-alb (ACTIVE)</li>
                    <li><strong>Database:</strong> playground-postgres (AVAILABLE)</li>
                    <li><strong>Container Registry:</strong> ECR repositories ready</li>
                    <li><strong>Networking:</strong> VPC with public/private subnets</li>
                </ul>
            </div>

            <div class="info">
                <h3>üöÄ What's Working Now</h3>
                <p>Your infrastructure is ready for:</p>
                <ul>
                    <li>Kubernetes application deployment</li>
                    <li>Docker container orchestration</li>
                    <li>Database connectivity</li>
                    <li>Load balancing and scaling</li>
                    <li>CI/CD pipeline execution</li>
                </ul>
            </div>

            <div class="info">
                <h3>üìä Test Results</h3>
                <p>‚úÖ EKS Cluster: Connected and operational</p>
                <p>‚úÖ Load Balancer: Now responding to requests</p>
                <p>‚úÖ Database: Available and accessible</p>
                <p>‚úÖ Container Registry: Ready for image pushes</p>
                <p>‚úÖ Networking: All components communicating</p>
            </div>

            <div class="timestamp">
                <p>Test app deployed at: <span id="timestamp"></span></p>
            </div>
        </div>

        <script>
            document.getElementById('timestamp').textContent = new Date().toLocaleString();
        </script>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-test-service
  namespace: default
spec:
  selector:
    app: nginx-test
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-test-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: playground-alb
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-test-service
            port:
              number: 80