FROM node:18-alpine AS builder

WORKDIR /app

# Install curl for health checks and debugging
RUN apk add --no-cache curl

# Copy package files
COPY package*.json ./
COPY prisma ./prisma/

# Install dependencies
RUN npm ci && npm cache clean --force

# Generate Prisma client
RUN npx prisma generate

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Install curl for health checks
RUN apk add --no-cache curl

# Copy package files
COPY package*.json ./
COPY prisma ./prisma/

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma

# Copy scripts directory for database initialization
COPY scripts ./scripts

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S village -u 1001

# Create logs directory and set permissions
RUN mkdir -p logs && chown -R village:nodejs /app

USER village

EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

# Copy startup script
COPY --chown=village:nodejs scripts/start.sh ./scripts/start.sh

# Make startup script executable
RUN chmod +x scripts/start.sh

# Production command - use startup script for database initialization
CMD ["./scripts/start.sh"]
