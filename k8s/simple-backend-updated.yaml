apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-backend
  namespace: default
  labels:
    app: simple-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: simple-backend
  template:
    metadata:
      labels:
        app: simple-backend
    spec:
      containers:
      - name: backend
        image: nginx:alpine
        command: ["/bin/sh"]
        args:
          - -c
          - |
            cat > /etc/nginx/nginx.conf << 'EOF'
            events {
                worker_connections 1024;
            }
            http {
                include /etc/nginx/mime.types;
                default_type application/octet-stream;
                
                server {
                    listen 3001;
                    server_name localhost;
                    
                    location /api/health {
                        add_header Content-Type application/json;
                        return 200 '{"status":"OK","message":"Simple backend is running"}';
                    }
                    
                    # Generic registration endpoint (for frontend compatibility)
                    location /api/auth/register {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"message":"User registered successfully","user":{"id":"user-123","name":"Test User","email":"test@example.com","role":"student","createdAt":"2025-09-24T09:00:00Z"},"token":"jwt-token-123"}';
                    }
                    
                    # Generic login endpoint (for frontend compatibility)
                    location /api/auth/login {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"message":"User logged in successfully","user":{"id":"user-123","name":"Test User","email":"test@example.com","role":"student","createdAt":"2025-09-24T09:00:00Z"},"token":"jwt-token-123"}';
                    }
                    
                    # Student-specific endpoints
                    location /api/auth/register/student {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"message":"Student registered successfully","user":{"id":"temp-student-123","email":"test@example.com","name":"Test Student","role":"student"}}';
                    }
                    
                    location /api/auth/login/student {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"message":"Student logged in successfully","token":"temp-jwt-token-123","user":{"id":"temp-student-123","email":"test@example.com","name":"Test Student","role":"student"}}';
                    }
                    
                    # Admin endpoints
                    location /api/auth/register/admin {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"message":"Admin registered successfully","user":{"id":"temp-admin-123","email":"admin@example.com","name":"Test Admin","role":"admin"}}';
                    }
                    
                    location /api/auth/login/admin {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"message":"Admin logged in successfully","token":"temp-jwt-token-admin-123","user":{"id":"temp-admin-123","email":"admin@example.com","name":"Test Admin","role":"admin"}}';
                    }
                    
                    # Donor endpoints
                    location /api/auth/register/donor {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"message":"Donor registered successfully","user":{"id":"temp-donor-123","email":"donor@example.com","name":"Test Donor","role":"donor"}}';
                    }
                    
                    location /api/auth/login/donor {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"message":"Donor logged in successfully","token":"temp-jwt-token-donor-123","user":{"id":"temp-donor-123","email":"donor@example.com","name":"Test Donor","role":"donor"}}';
                    }
                    
                    # User profile endpoint
                    location /api/user/profile {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"user":{"id":"user-123","name":"Test User","email":"test@example.com","role":"student","createdAt":"2025-09-24T09:00:00Z"}}';
                    }
                    
                    # Auth verify endpoint
                    location /api/auth/verify {
                        add_header Content-Type application/json;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                        
                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                        
                        return 200 '{"success":true,"user":{"id":"user-123","name":"Test User","email":"test@example.com","role":"student","createdAt":"2025-09-24T09:00:00Z"},"token":"jwt-token-123"}';
                    }
                    
                    # Default API response
                    location /api/ {
                        add_header Content-Type application/json;
                        return 200 '{"message":"API endpoint not implemented yet","path":"$request_uri"}';
                    }
                    
                    # Root endpoint
                    location / {
                        add_header Content-Type application/json;
                        return 200 '{"message":"GV Playground Simple Backend","status":"running","endpoints":["GET /api/health","POST /api/auth/register","POST /api/auth/login","POST /api/auth/register/student","POST /api/auth/login/student","POST /api/auth/register/admin","POST /api/auth/login/admin","POST /api/auth/register/donor","POST /api/auth/login/donor","GET /api/user/profile","GET /api/auth/verify"]}';
                    }
                }
            }
            EOF
            nginx -g "daemon off;"
        ports:
        - containerPort: 3001
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: simple-backend-service
  namespace: default
  labels:
    app: simple-backend
spec:
  selector:
    app: simple-backend
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
  type: ClusterIP