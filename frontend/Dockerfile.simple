FROM nginx:alpine

# Copy a simple HTML file for testing
RUN echo '<!DOCTYPE html>
<html>
<head>
    <title>GradVillage Dev2 Frontend</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body { 
            font-family: Arial, sans-serif; 
            margin: 0; 
            padding: 20px; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            min-height: 100vh;
        }
        .container { 
            max-width: 800px; 
            margin: 0 auto; 
            text-align: center; 
            padding: 50px 20px;
        }
        h1 { font-size: 3em; margin-bottom: 20px; }
        .status { 
            background: rgba(255,255,255,0.1); 
            padding: 20px; 
            border-radius: 10px; 
            margin: 20px 0;
        }
        .api-test { 
            background: rgba(255,255,255,0.2); 
            padding: 15px; 
            border-radius: 5px; 
            margin: 10px 0;
        }
        button {
            background: #ff6b6b;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            margin: 10px;
        }
        button:hover { background: #ff5252; }
        #result { margin-top: 20px; padding: 15px; background: rgba(0,0,0,0.3); border-radius: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üéì GradVillage Dev2</h1>
        <div class="status">
            <h2>‚úÖ Frontend is Working!</h2>
            <p>HTTPS Frontend successfully deployed on AWS Fargate</p>
            <p><strong>Environment:</strong> dev2</p>
            <p><strong>URL:</strong> https://dev2.gradvillage.com</p>
        </div>
        
        <div class="api-test">
            <h3>üîå API Connection Test</h3>
            <p>Test the backend API connection:</p>
            <button onclick="testAPI()">Test Backend API</button>
            <button onclick="testHealth()">Test Health Check</button>
            <div id="result"></div>
        </div>
        
        <div class="status">
            <h3>üöÄ Next Steps</h3>
            <p>1. ‚úÖ HTTPS frontend working</p>
            <p>2. ‚úÖ HTTPS backend API working</p>
            <p>3. ‚úÖ No mixed content issues</p>
            <p>4. üéØ Ready for full application deployment</p>
        </div>
        
        <div class="api-test">
            <h3>üìù Registration Form Test</h3>
            <form onsubmit="testRegistration(event)">
                <input type="email" placeholder="test@example.com" id="email" required style="padding: 10px; margin: 5px; border-radius: 5px; border: none;">
                <input type="text" placeholder="Test User" id="name" required style="padding: 10px; margin: 5px; border-radius: 5px; border: none;">
                <button type="submit">Test Registration API</button>
            </form>
        </div>
    </div>

    <script>
        async function testAPI() {
            const result = document.getElementById("result");
            result.innerHTML = "Testing API...";
            
            try {
                const response = await fetch("https://api-dev2.gradvillage.com/api/status");
                const data = await response.json();
                result.innerHTML = `<strong>‚úÖ API Success!</strong><br><pre>${JSON.stringify(data, null, 2)}</pre>`;
            } catch (error) {
                result.innerHTML = `<strong>‚ùå API Error:</strong> ${error.message}`;
            }
        }
        
        async function testHealth() {
            const result = document.getElementById("result");
            result.innerHTML = "Testing health...";
            
            try {
                const response = await fetch("https://api-dev2.gradvillage.com/health");
                const data = await response.json();
                result.innerHTML = `<strong>‚úÖ Health Check Success!</strong><br><pre>${JSON.stringify(data, null, 2)}</pre>`;
            } catch (error) {
                result.innerHTML = `<strong>‚ùå Health Error:</strong> ${error.message}`;
            }
        }
        
        async function testRegistration(event) {
            event.preventDefault();
            const result = document.getElementById("result");
            const email = document.getElementById("email").value;
            const name = document.getElementById("name").value;
            
            result.innerHTML = "Testing registration API...";
            
            try {
                const response = await fetch("https://api-dev2.gradvillage.com/api/auth/register/student", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        email: email,
                        name: name,
                        password: "testpassword123"
                    })
                });
                
                const data = await response.json();
                if (response.ok) {
                    result.innerHTML = `<strong>‚úÖ Registration API Success!</strong><br><pre>${JSON.stringify(data, null, 2)}</pre>`;
                } else {
                    result.innerHTML = `<strong>‚ö†Ô∏è Registration Response:</strong><br><pre>${JSON.stringify(data, null, 2)}</pre>`;
                }
            } catch (error) {
                result.innerHTML = `<strong>‚ùå Registration Error:</strong> ${error.message}`;
            }
        }
        
        // Test API on page load
        window.onload = function() {
            testHealth();
        }
    </script>
</body>
</html>' > /usr/share/nginx/html/index.html

# Create a simple nginx config
RUN echo 'server {
    listen 3000;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    location /health {
        add_header Content-Type application/json;
        return 200 "{\"status\":\"healthy\",\"service\":\"frontend\"}";
    }
}' > /etc/nginx/conf.d/default.conf

# Remove the default nginx config
RUN rm -f /etc/nginx/conf.d/default.conf.bak

EXPOSE 3000

CMD ["nginx", "-g", "daemon off;"]
